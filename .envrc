#!/usr/bin/env bash
source_up

if ! has nix_direnv_version || ! nix_direnv_version 2.2.0; then
	source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.2.0/direnvrc" "sha256-5EwyKnkJNQeXrRkYbwwRBcXbibosCJqyIUuz9Xq+LRc="
fi

xcrun simctl keychain booted add-root-cert "$NODE_EXTRA_CA_CERTS"

strict_env

export NODE_EXTRA_CA_CERTS='/Library/Application Support/Netskope/STAgent/data/nscacert.pem'

NIX_CONFIG="extra-experimental-features = flakes nix-command"
export NIX_CONFIG

if [ -f "./flake.nix" ]; then
	FLAKE_PATH="."
else
	FLAKE_PATH="github:bruno-ebstein-pass-culture/pass-culture-app-native/devbox"
fi
use flake "${FLAKE_PATH}" # put in your environnement _almost_ everything needed when you use [Nix](https://nixos.org)

export DEVBOX_COREPACK_ENABLED=true

eval "$(devbox generate direnv --print-envrc)"

layout node

process-compose up

# fix test that depends on TimeZone
TZ=UTC

git config --local init.defaultBranch master

# needed to use `git-gamble`
TESTS_TO_RUN="$""(git list-modified-files)"
TESTS_TO_RUN="--onlyChanged"
TESTS_TO_RUN=" --changedSince origin/master"
TESTS_TO_RUN=" --changedSince $""(git merge-base origin/master @)"
TESTS_TO_RUN=""
TESTS_TO_RUN+="src/"
# TESTS_TO_RUN+="|src/features/"
TESTS_TO_RUN="\"${TESTS_TO_RUN}\""

TESTS_TO_RUN_NATIVE="${TESTS_TO_RUN}"
# TESTS_TO_RUN_NATIVE="\"somefile\""

TESTS_TO_RUN_WEB="${TESTS_TO_RUN}"
# TESTS_TO_RUN_WEB="\"somefile\""

JEST_OPTIONS=""
JEST_OPTIONS+="--updateSnapshot"

TEST_NATIVE="fnm exec yarn test:unit ${JEST_OPTIONS} ${TESTS_TO_RUN_NATIVE}"
TEST_WEB="fnm exec yarn test:unit:web ${JEST_OPTIONS} ${TESTS_TO_RUN_WEB}"

# native & web
FIRST_TEST="${TEST_NATIVE}"
SECOND_TEST="${TEST_WEB}"
# web & native
# FIRST_TEST="${TEST_WEB}"
# SECOND_TEST="${TEST_NATIVE}"
# native only
# FIRST_TEST="${TEST_NATIVE}"
# SECOND_TEST="true"
# web only
# FIRST_TEST="${TEST_WEB}"
# SECOND_TEST="true"

export GAMBLE_TEST_COMMAND="sh -c '${FIRST_TEST} && ${SECOND_TEST}'"

export IOS_DEVICE_NAME="iPhone 14 Pro Max"
export IOS_PLATFORM_VERSION="16.1"

export ANDROID_DEVICE_NAME="sdk_gphone_x86"
export ANDROID_PLATFORM_VERSION="11.0"

export ANDROID_HOME=$HOME/Library/Android/sdk
PATH_add $ANDROID_HOME/emulator
PATH_add $ANDROID_HOME/tools
PATH_add $ANDROID_HOME/tools/bin
PATH_add $ANDROID_HOME/platform-tools
